# Sample configuration for maintaining slight chamber vacuum using a BMP/BME280 sensor
# and a controllable exhaust fan.
#
# 1) Define the pressure-controlled fan and its sensor
#
#[pressure_fan chamber_vacuum]
#pin: PA8
#sensor_type: BME280
#i2c_mcu: mcu
#i2c_bus: i2c1a
## i2c_address: 118 # 0x76 default
#bme280_oversample_pressure: 2
#bme280_oversample_temp: 2
#bme280_iir_filter: 1
#control: pid
#pid_Kp: 10
#pid_Ki: 0.5
#pid_Kd: 20
#pid_deriv_time: 2.0
#target_delta: 0.0       # default off; set in print_start with SET_PRESSURE_FAN_TARGET
#auto_set_baseline: true # capture baseline at READY
#min_speed: 0.0
#max_speed: 1.0
#
# To set or capture the baseline later:
#   SET_PRESSURE_BASELINE PRESSURE_FAN=chamber_vacuum
# To change target and speed limits at runtime:
#   SET_PRESSURE_FAN_TARGET PRESSURE_FAN=chamber_vacuum TARGET_DELTA=20 MIN_SPEED=0 MAX_SPEED=1
# To query current state:
#   QUERY_PRESSURE_FAN PRESSURE_FAN=chamber_vacuum

# Optional: Enable control-side delta filtering (EMA) to reduce jitter
# in the controller input. 0.0 disables filtering; 0.3-0.6 is a good range.
#   delta_filter_alpha: 0.4

# Optional helper macros for tuning/filter visibility

#[gcode_macro PRESSURE_FILTER_SWEEP]
#description: Sweep delta_filter_alpha and print raw vs filtered readings
#gcode:
#  {% set pf = params.PRESSURE_FAN|default('chamber_vacuum') %}
#  {% set start = (params.START|default(0.0))|float %}
#  {% set end = (params.END|default(0.8))|float %}
#  {% set step = (params.STEP|default(0.2))|float %}
#  {% set samples = (params.SAMPLES|default(10))|int %}
#  {% set interval = (params.INTERVAL|default(1.0))|float %}
#  {% set n = (((end - start) / step) + 0.0001)|int + 1 %}
#  RESPOND PREFIX=pressure_fan MSG="Filter sweep: start={{start}} end={{end}} step={{step}} samples={{samples}} interval={{interval}}s"
#  {% for k in range(0, n) %}
#    {% set alpha = start + k*step %}
#    SET_PRESSURE_FILTER PRESSURE_FAN={pf} ALPHA={alpha}
#    RESPOND PREFIX=pressure_fan MSG="ALPHA={{ '%.2f'|format(alpha) }}"
#    {% for i in range(0, samples) %}
#      QUERY_PRESSURE_FAN PRESSURE_FAN={pf}
#      G4 P{{ (interval*1000)|int }}
#    {% endfor %}
#  {% endfor %}

#[gcode_macro PRESSURE_FILTER_MONITOR]
#description: Hold a fixed alpha and print readings for a duration
#gcode:
#  {% set pf = params.PRESSURE_FAN|default('chamber_vacuum') %}
#  {% set alpha = (params.ALPHA|default(0.4))|float %}
#  {% set duration = (params.DURATION|default(20))|int %}
#  {% set interval = (params.INTERVAL|default(1.0))|float %}
#  SET_PRESSURE_FILTER PRESSURE_FAN={pf} ALPHA={alpha}
#  RESPOND PREFIX=pressure_fan MSG="Monitor: ALPHA={{alpha}} for {{duration}}s every {{interval}}s"
#  {% for t in range(0, duration) %}
#    QUERY_PRESSURE_FAN PRESSURE_FAN={pf}
#    G4 P{{ (interval*1000)|int }}
#  {% endfor %}
